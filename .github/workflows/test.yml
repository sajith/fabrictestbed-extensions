# This workflow will install Python dependencies, run tests and lint
# with a variety of Python versions For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Test

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:
  workflow_call:

jobs:
  test:

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
        os:
          # See https://github.com/actions/runner-images for available
          # runners.
          - "ubuntu-22.04"
          - "windows-2022"
          - "macos-13" # Intel
          - "macos-14" # ARM

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out sources
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # caching pip dependencies
        cache-dependency-path: pyproject.toml

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install wheel

    # # TODO: we can't use flake8 right now, because there isn't a
    # # version of flake8 that can use pycodestyle==2.6.0, and fim has
    # # pinned pycodestyle==2.6.0.
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install and test with pytest
      run: |
        python -m pip install .[test]
        python -m coverage run -m pytest
        python -m coverage report
        # Generate LCOV format coverage data for coveralls.
        python -m coverage lcov -o coverage.lcov
 
    - name: Send coverage data to coveralls.io
      uses: coverallsapp/github-action@v2
      with:
        flag-name: run-${{ join(matrix.*, '-') }}
        file: coverage.lcov
        parallel: true

  finalize:
    name: finalize
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Indicate completion to coveralls.io
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
